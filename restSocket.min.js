!function(){function a(a){function b(a){throw"restSocket Error: "+a}function e(a){var b={originalPath:a,regexp:a},c=b.keys=[];return a=a.replace(/([().])/g,"\\$1").replace(/(\/)?:(\w+)([\?\*])?/g,function(a,b,d,e){var f="?"===e?e:null,g="*"===e?e:null;return c.push({name:d,optional:!!f}),b=b||"",""+(f?"":b)+"(?:"+(f?b:"")+(g&&"(.+?)"||"([^/]+)")+(f||"")+")"+(f||"")}).replace(/([\/$\*])/g,"\\$1"),b.regexp=new RegExp("^"+a+"$","i"),b}function f(a){_.each($.paths,function(b){if(b.regexp.test(a.resource)){var c=a.resource.match(b.regexp),d={};_.each(b.keys,function(a,b){c.length>b&&(d[a]=c[b+1])}),_.each(b.methods,function(b){b.method==a.method&&(a.payload&&b.success(a.payload,d),a.error&&b.error(a.error,d))})}})}function g(){_.each(d.requestQueue,function(a){d.socket.send(a)}),d.requestQueue=[]}if(!("WebSocket"in window))return b("WebSockets is not supported in this browser.");if(!(a&&a.path&&a.authToken))return b("You must include a path and authToken in settings.");var c=a.authToken;if("function"==typeof c&&(c=c()),"string"!=typeof c)return b("The authToken must be a string.");var d=this;d.ready=!1,d.openConnection=_.throttle(function(){d.socket=new WebSocket("ws://"+a.path),d.socket.onopen=function(){d.socket.send(a.authToken)},d.socket.onerror=function(){"function"==typeof a.error&&a.error()},d.socket.onmessage=function(b){var c=b.data;if(d.ready||"string"!=typeof c||"Authentication successful"!=c){if(!(d.ready&&"object"==typeof c&&c.resource&&c.method&&(c.error||c.payload&&"object"==typeof c.payload))){var e="data does not match communication pattern";return d.ready||(e="authorization has not completed"),console.log("restSocket: Incoming message from server ignored because "+e+". Event output below:"),console.log(b),!1}f(c)}else"function"==typeof a.success&&a.success(),d.requestQueue.length>0&&g(),d.ready=!0},d.socket.onclose=function(b){d.ready=!1,"function"==typeof a.onclose&&a.onclose(b)}},2e3),d.paths=[],"object"==typeof a.api&&_.each(a.api,function(a,b){var c=e(b);c.methods=[],_.each(a,function(a,b){var d={method:b};"function"==typeof a?d.success=a:"object"==typeof a&&("function"==typeof a.success&&(d.success=a.success),"function"==typeof a.error&&(d.error=a.error)),c.methods.push(d)}),d.paths.push(c)}),d.openConnection(),d.requestQueue=[],d.handleClientRequests=function(a,c,e){if(!a||!c)return b("Requests require at least a resource and method.");if(["PATCH","POST","PUT"].indexOf(c)>-1&&(!e||"object"!=typeof e))return b(c+" requests require a payload object.");var f=a;if("GET"===c){var g="?";"object"==typeof params&&_.each(params,function(a,b){f+=g+b+"="+a,g="&"})}var h={resource:f,method:c};["PATCH","POST","PUT"].indexOf(c)>-1&&(h.payload=e),d.ready?d.socket.send(h):d.requestQueue.push(h)}}_.extend(a.prototype,{getPaths:function(){return this.paths},getRawSocket:function(){return this.socket},getReadyState:function(){return this.ready},getRequestQueue:function(){return this.requestQueue},reopen:function(){this.openConnection()},get:function(a,b){this.handleClientRequests(a,"GET",b)},patch:function(a,b){this.handleClientRequests(a,"PATCH",b)},post:function(a,b){this.handleClientRequests(a,"POST",b)},put:function(a,b){this.handleClientRequests(a,"PUT",b)},remove:function(a){this.handleClientRequests(a,"DELETE")}}),window.restSocket=a}();
