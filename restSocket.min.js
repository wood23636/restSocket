!function(){function e(e){for(var n,t=/\[("|')(.+)\1\]|([^.\[\]]+)/g,i=[];null!==(n=t.exec(e));)i.push(n[2]||n[3])
return i}function n(n,t){"string"==typeof t&&(t=e(t))
for(var i=-1,s=t.length;++i<s&&null!=n;)n=n[t[i]]
return i===s?n:void 0}function t(e){function t(e){throw"restSocket Error: "+e}function i(){_.each(o.subscriptions,function(e){o.handleClientSubscribes(e.destination,e.callback,e.headers)})}function s(){_.each(o.requestQueue,function(e){o.socket.send(e.resource,e.headers,e.body)}),o.requestQueue=[]}if(!("WebSocket"in window))return t("WebSockets is not supported in this browser.")
if("object"!=typeof e||"string"!=typeof e.path||"string"!=typeof e.login||"string"!=typeof e.password)return t("restSocket requires a settings object with at least a path, login, and password.")
var o=this
o.ready=!1,o.openConnection=_.throttle(function(){o.socket=Stomp.client("ws://"+e.path).connect(e.login,e.password,function(){"function"==typeof e.onConnect&&e.onConnect(),s(),i()},function(n){"function"==typeof e.onConnectionError&&e.onConnectionError(n)}),o.socket.debug=function(n){n.indexOf("Lost connection")>-1&&(o.ready=!1,(void 0===e.autoReconnect||e.autoReconnect)&&o.openConnection(),"function"==typeof e.onClose&&e.onClose(event))}},2e3),o.openConnection(),o.subscriptionRouter=function(t){var i=null
try{i=JSON.parse(t.body)}finally{}var s=null
_.isString(t.headers.method)&&t.headers.method.length&&(s=t.headers.method.toUpperCase())
var o=t.headers.destination.split("/"),r=[]
_.each(o,function(e){var n=parseInt(e)
r.push(isNaN(n)||""+n!==e?"'"+e+"'":n)})
var c="["+r.slice(0,-1).join("][")+"]",a=r.slice(-1)
r="["+r.join("][")+"]"
var u=n(e.model,r),d=n(e.model,c)
if(u)s?i?"DELETE"===s?(t.body="",processSubscription(t)):"POST"===s||"PATCH"===s?(t.headers.method="",processSubscription(t)):"PUT"===s&&(_.isArray(u)&&_.isArray(i)?u=i:_.isPlainObject(u)&&_.isPlainObject(i)&&(u=i)):"DELETE"===s&&_.isPlainObject(u)&&d.splice(a,1):i&&(_.isArray(u)?_.isArray(i)?u=i:_.isPlainObject(i)&&u.push(i):_.isPlainObject(u)&&_.isPlainObject(i)&&_.assign(u,i))
else{if(!d)return
if(i&&_.isString(t.headers.method)&&t.headers.method.length){var s=t.headers.method.toUpperCase()
_.isArray(d)&&"PUT"===s&&d.push(i)}}},o.subscriptions=[],o.handleClientSubscribes=function(e,n,t){var i={}
_.isPlainObject(additionalHeaders)?i=t:_.isPlainObject(callback)&&(i=callback)
var s=function(e){var t=o.subscriptionRouter
_.isFunction(n)&&(t=n),t(e)},r=o.socket.subscribe(e,s,i),c=_.uniqueId()
o.subscriptions.push({uid:c,destination:e,overrideCallback:s,headers:i})
var a=function(){this.uid=c}
return a.prototype.unsubscribe=function(){o.subscriptions.splice(_.indexOf(o.subscriptions,_.findWhere(o.subscriptions,{uid:this.uid})),1),r.unsubscribe()},a},o.requestQueue=[],o.handleClientRequests=function(e,n,i,s,r){if(!e||!n)return t("Messages require at least a destination and method.")
var c={destination:e,headers:{method:n}}
_.isPlainObject(i)&&(c.body=JSON.stringify(i)),_.isPlainObject(s)&&_.assign(c.headers,s),o.ready?o.socket.send(c.resource,c.headers,c.body):(o.requestQueue.push(c),_.isFunction(r)?r():_.isFunction(s)?s():_.isFunction(i)&&i())}}_.extend(t.prototype,{send:function(e,n,t,i,s){this.handleClientRequests(e,n,i,t,s)},subscribe:function(e,n,t){this.handleClientSubscribes(e,n,t)},get:function(e,n,t,i){this.handleClientRequests(e,"GET",{},n)
var s=this.handleClientSubscribes(e,function(e){if("PUT"!==e.headers.method)return!1
var n=JSON.parse(e.body)
t(n),s.unsubscribe()},i)},mirror:function(e,n,t){this.subscriptionRouter({headers:{destination:e,method:n},body:JSON.stringify(t)})}}),window.restSocket=t}()
