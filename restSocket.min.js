!function(){function e(e){function t(e){throw"restSocket Error: "+e}function o(e){var t={originalPath:e,regexp:e},o=t.keys=[]
return e=e.replace(/([().])/g,"\\$1").replace(/(\/)?:(\w+)([\?\*])?/g,function(e,t,n,r){var s="?"===r?r:null,u="*"===r?r:null
return o.push({name:n,optional:!!s}),t=t||"",""+(s?"":t)+"(?:"+(s?t:"")+(u&&"(.+?)"||"([^/]+)")+(s||"")+")"+(s||"")}).replace(/([\/$\*])/g,"\\$1"),t.regexp=RegExp("^"+e+"$","i"),t}function n(e){_.each($.paths,function(t){if(t.regexp.test(e.resource)){var o=e.resource.match(t.regexp),n={}
_.each(t.keys,function(e,t){o.length>t&&(n[e]=o[t+1])}),_.each(t.methods,function(t){t.method==e.method&&(e.payload&&t.success(e.payload,n),e.error&&t.error(e.error,n))})}})}function r(){_.each(c.requestQueue,function(e){c.socket.send(e)}),c.requestQueue=[]}function s(){"function"==typeof e.success&&e.success(),c.requestQueue.length>0&&r(),c.ready=!0}if(!("WebSocket"in window))return t("WebSockets is not supported in this browser.")
if(!e||!e.path)return t("You must include a path in settings.")
if(e.authToken){var u=e.authToken
if("function"==typeof u&&(u=u()),"string"!=typeof u)return t("The authToken must be a string.")}var c=this
c.ready=!1,c.openConnection=_.throttle(function(){c.socket=new WebSocket("ws://"+e.path),c.socket.onopen=function(){e.authToken?c.socket.send(e.authToken):s()},c.socket.onerror=function(){"function"==typeof e.error&&e.error()},c.socket.onmessage=function(t){var o=t.data
if(!c.ready&&e.authToken&&"string"==typeof o&&"Authentication successful"==o)s()
else{if(!(c.ready&&"object"==typeof o&&o.resource&&o.method&&(o.error||o.payload&&"object"==typeof o.payload))){var r="data does not match communication pattern"
return!c.ready&&e.authToken&&(r="authorization has not completed"),console.log("restSocket: Incoming message from server ignored because "+r+". Event output below:"),console.log(t),!1}n(o)}},c.socket.onclose=function(t){c.ready=!1,"function"==typeof e.onclose&&e.onclose(t)}},2e3),c.paths=[],"object"==typeof e.api&&_.each(e.api,function(e,t){var n=o(t)
n.methods=[],_.each(e,function(e,t){var o={method:t}
"function"==typeof e?o.success=e:"object"==typeof e&&("function"==typeof e.success&&(o.success=e.success),"function"==typeof e.error&&(o.error=e.error)),n.methods.push(o)}),c.paths.push(n)}),c.openConnection(),c.requestQueue=[],c.handleClientRequests=function(e,o,n){if(!e||!o)return t("Requests require at least a resource and method.")
if(["PATCH","POST","PUT"].indexOf(o)>-1&&(!n||"object"!=typeof n))return t(o+" requests require a payload object.")
var r=e
if("GET"===o){var s="?"
"object"==typeof params&&_.each(params,function(e,t){r+=s+t+"="+e,s="&"})}var u={resource:r,method:o};["PATCH","POST","PUT"].indexOf(o)>-1&&(u.payload=n),c.ready?c.socket.send(u):c.requestQueue.push(u)}}_.extend(e.prototype,{getPaths:function(){return this.paths},getRawSocket:function(){return this.socket},getReadyState:function(){return this.ready},getRequestQueue:function(){return this.requestQueue},reopen:function(){this.openConnection()},get:function(e,t){this.handleClientRequests(e,"GET",t)},patch:function(e,t){this.handleClientRequests(e,"PATCH",t)},post:function(e,t){this.handleClientRequests(e,"POST",t)},put:function(e,t){this.handleClientRequests(e,"PUT",t)},remove:function(e){this.handleClientRequests(e,"DELETE")}}),window.restSocket=e}()
